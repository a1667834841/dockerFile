name: Build Docker Images

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set matrix
        id: set-matrix
        run: |
          MATRIX=$(cat .github/docker-images.json | jq -c '{include: .images}')
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Read image config
        id: read_config
        run: echo "config=$(cat .github/docker-images.json | jq -c)" >> $GITHUB_OUTPUT
        
      - name: Build and upload images
        run: |
          images='${{ steps.read_config.outputs.config }}'
          for img in $(echo "$images" | jq -c '.images[]'); do
            name=$(echo $img | jq -r '.name')
            tag=$(echo $img | jq -r '.tag')
            dockerfile=$(echo $img | jq -r '.dockerfile')
            
            echo "Building $name:$tag from $dockerfile"
            
            # Build image
            docker build -t $name:$tag -f $dockerfile .
            
            # Save image
            docker save $name:$tag -o /tmp/${name}_${tag}.tar
          done
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}_${{ matrix.tag }}
          path: /tmp/${{ matrix.name }}_${{ matrix.tag }}.tar
          retention-days: 1 